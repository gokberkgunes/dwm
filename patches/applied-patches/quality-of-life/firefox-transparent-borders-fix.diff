When a compositor's transparency is enabled, dwm draws the borders of, at
least, Mozilla Firefox as fully transparent. On the contrary, borders of all
the other programs appear as solid or semi-transparent based on what user
specifies on the compositor settings. This patch tries to homogenize the border
transparency behavior.

Ref:
https://github.com/szatanjl/dwm/commit/1529909466206016f2101457bbf37c67195714c8

---

When terminal has transparency then its borders also become transparent.
Fix it by removing transparency from any pixels drawn.

diff --git a/dwm.c b/dwm.c
index 4cdbcbe..cd899f8 100644
--- a/drw.c
+++ b/drw.c
@@ -203,6 +203,8 @@ drw_clr_create(Drw *drw, Clr *dest, const char *clrname)
 	                       DefaultColormap(drw->dpy, drw->screen),
 	                       clrname, dest))
 		die("error, cannot allocate color '%s'", clrname);
+
+	dest->pixel |= 0xff << 24;
 }

 /* Wrapper to create color schemes. The caller has to call free(3) on the
